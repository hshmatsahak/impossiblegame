#BlueJ class context
comment0.target=MazeLayout
comment0.text=MazeLayout\ class\ (Contains\ the\ maze\ images\ in\ the\ maze\ and\ the\ file\ data\ for\ the\ current\ level's\ maze)
comment1.params=
comment1.target=MazeLayout()
comment1.text=When\ the\ MazeLayout\ object\ is\ created,\ acquries\ the\ images\ and\ gets\ the\ file\ data\ for\ the\ current\ level
comment10.params=x\ y
comment10.target=java.lang.String\ getMazeTile(int,\ int)
comment10.text=Returns\ the\ letter\ in\ a\ particular\ row\ and\ column\ (even\ though\ this\ method\ returns\ a\ string,\ it\ will\ still\ just\ return\ a\ one-lettered\ string)
comment11.params=x\ y\ c
comment11.target=void\ setMazeTile(int,\ int,\ java.lang.String)
comment11.text=Sets\ the\ letter\ in\ a\ particular\ row\ and\ column
comment2.params=
comment2.target=void\ openFile()
comment2.text=Attempt\ to\ open\ file\ of\ chosen\ level
comment3.params=
comment3.target=void\ readFile()
comment3.text=Attempt\ to\ read\ file
comment4.params=
comment4.target=void\ closeFile()
comment4.text=Close\ level\ file
comment5.params=
comment5.target=java.awt.Image\ getFloor()
comment5.text=Returns\ the\ floor\ image
comment6.params=
comment6.target=java.awt.Image\ getWall()
comment6.text=Returns\ the\ wall\ image
comment7.params=
comment7.target=java.awt.Image\ getZone()
comment7.text=Returns\ the\ zone\ image
comment8.params=
comment8.target=java.awt.Image\ getBarrier()
comment8.text=Returns\ the\ barrier\ image
comment9.params=
comment9.target=int\ getRow()
comment9.text=Returns\ the\ number\ of\ rows\ in\ the\ maze
numComments=12
